import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import clsx from "clsx";
import StarIcon from "@material-ui/icons/Star";
import StarBorderIcon from "@material-ui/icons/StarBorder";
import StarHalfIcon from "@material-ui/icons/StarHalf";
import CurrencyFormat from "react-currency-format";
import Layout from "../components/layout/Layout";
import MiniGallery from "../components/mini-gallery/MiniGallery";
import SimpleCard from "../components/cards/SimpleCard";
import CustomSelect from "../components/custom-inputs/CustomSelect";
import CustomTextInput from "../components/custom-inputs/CustomTextInput";
import { featuredProducts, renderProductDesc } from "../constants";
import { useAppState } from "../providers/AppStateProvider";
import { renderBasket } from "../reducers/appReducer";
import styles from "../styles/Cart.module.css";
import { addToBasket, removeFromBasket } from "../actions/action";

export default function Cart() {
  const [{ basket, basketTotal }, dispatch] = useAppState();

  const getAllTotal = (subtotal) => {
    const tax = (3 * subtotal) / 100;
    const shipping = 1500;
    const total = subtotal + tax + shipping;
    return {
      tax,
      total,
      shipping,
    };
  };

  return (
    <div>
      <Layout>
        <Head>
          <title>FitStop | Product_details</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <div className={clsx("container", styles.cart_page)}>
          <table className={styles.cart_table}>
            <tr>
              <th>Product</th>
              <th>Quantity</th>
              <th>Subtotal</th>
            </tr>
            {basket.map((item, index) => {
              const { product, quantity } = item;
              return (
                <tr key={index}>
                  <td>
                    <div className={styles.cart_info}>
                      <div className={styles.product_img}>
                        <Image
                          src={product?.image[0]}
                          alt="card image"
                          width={80}
                          height={80}
                        />
                      </div>
                      <div>
                        <p>{product?.title}</p>
                        <CurrencyFormat
                          renderText={(value) => (
                            <div className="price_box">
                              <small className="smallroduct__price">
                                Price: {value}
                              </small>
                            </div>
                          )}
                          decimalScale={2}
                          value={product?.price}
                          displayType={"text"}
                          thousandSeparator={true}
                          prefix="₦"
                        />
                        <a
                          className={styles.remove_btn}
                          onClick={() => removeFromBasket(dispatch, item)}
                        >
                          Remove
                        </a>
                      </div>
                    </div>
                  </td>
                  <td>
                    <div className={styles.input}>
                      <CustomTextInput
                        classes={styles["quantity-input"]}
                        name="quantity"
                        value={quantity}
                        onChange={(e) =>
                          addToBasket(dispatch, {
                            ...item,
                            quantity: Number(e.target.value),
                          })
                        }
                        componentProps={{ type: "number", min: 1 }}
                      />
                    </div>
                  </td>
                  <td>
                    <CurrencyFormat
                      renderText={(value) => (
                        <div className="price_box">
                          <p className="product__price">{value}</p>
                        </div>
                      )}
                      decimalScale={2}
                      value={quantity * product?.price}
                      displayType={"text"}
                      thousandSeparator={true}
                      prefix="₦"
                    />
                  </td>
                </tr>
              );
            })}
          </table>
          <div className={styles.total_price}>
            {basketTotal ? (
              <table>
                <tr>
                  <td>Subtotal</td>
                  <td>
                    <CurrencyFormat
                      renderText={(value) => (
                        <div className="price_box">
                          <p className="product__price">{value}</p>
                        </div>
                      )}
                      decimalScale={2}
                      value={basketTotal}
                      displayType={"text"}
                      thousandSeparator={true}
                      prefix="₦"
                    />
                  </td>
                </tr>
                <tr>
                  <td>Tax</td>
                  <td>
                    <CurrencyFormat
                      renderText={(value) => (
                        <div className="price_box">
                          <p className="product__price">{value}</p>
                        </div>
                      )}
                      decimalScale={2}
                      value={getAllTotal(basketTotal)?.tax}
                      displayType={"text"}
                      thousandSeparator={true}
                      prefix="₦"
                    />
                  </td>
                </tr>
                <tr>
                  <td>Shipping</td>
                  <td>
                    <CurrencyFormat
                      renderText={(value) => (
                        <div className="price_box">
                          <p className="product__price">{value}</p>
                        </div>
                      )}
                      decimalScale={2}
                      value={getAllTotal(basketTotal)?.shipping}
                      displayType={"text"}
                      thousandSeparator={true}
                      prefix="₦"
                    />
                  </td>
                </tr>
                <tr>
                  <td>Total</td>
                  <td>
                    <CurrencyFormat
                      renderText={(value) => (
                        <div className="price_box">
                          <p className="product__price">{value}</p>
                        </div>
                      )}
                      decimalScale={2}
                      value={getAllTotal(basketTotal)?.total}
                      displayType={"text"}
                      thousandSeparator={true}
                      prefix="₦"
                    />
                  </td>
                </tr>
              </table>
            ) : (
              ""
            )}
          </div>
        </div>
      </Layout>
    </div>
  );
}
